!-*- mode: factor -*-
USING: listener kernel io tests vocabs ;
IN: application

SYMBOLS: testsym1 testsym2 ;

: test1 ( -- n ) \ test1 ;
: test2 ( -- n n ) \ in-range \ prim? ;

: application ( -- )
    \ listener definition >>restart
    "application started" print nl
    top ;

! nested data structure for cond
: test-case ( a -- c )
    dup { { 1 [ 3 + ] }
          { 2 [ 4 - ] }
          { 3 [ 6 / ] }
          [ drop 5 * ] } case ;

: test-case-expanded ( a -- c )
    dup dup 1 = [ drop 3 + ]
    [ dup 2 = [ drop 4 - ]
      [ dup 3 = [ drop 6 / ]
        [ drop 5 * ] if ] if ] if ;

: test-cond ( x -- y )
    dup { { [ 1 = ] [ "string" ] }
          { [ 2 = ] [ B{ 1 2 3 } ] }
          [ drop { 1 2 3 } ] } ;

: _test-dummy ( -- )
    0 drop ;

: test-seq ( -- seq )
    { 1 2 3 } ;

